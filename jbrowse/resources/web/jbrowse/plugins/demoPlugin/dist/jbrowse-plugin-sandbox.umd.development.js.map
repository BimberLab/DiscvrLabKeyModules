{"version":3,"file":"jbrowse-plugin-sandbox.umd.development.js","sources":["../src/HelloView/components/ReactComponent.tsx","../src/index.ts"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function ReactComponent() {\n  const [pushed, setPushed] = useState('')\n  return (\n    <div style={{ padding: 50 }}>\n      <h1>Hello plugin developers!</h1>\n      <button\n        onClick={() => {\n          setPushed('Woah! You pushed the button!')\n        }}\n      >\n        Push the button\n      </button>\n      <p>{pushed}</p>\n    </div>\n  )\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { isAbstractMenuManager } from '@jbrowse/core/util'\nimport { version } from '../package.json'\nimport { ReactComponent } from './HelloView'\n\nexport default class MyProjectPlugin extends Plugin {\n  name = 'MyProject!!!'\n  version = version\n\n  install(pluginManager: PluginManager) {\n    const { jbrequire } = pluginManager\n    const { types } = pluginManager.lib['mobx-state-tree']\n\n    const ViewType = jbrequire('@jbrowse/core/pluggableElementTypes/ViewType')\n    const stateModel = types\n      .model({ type: types.literal('HelloView') })\n      .actions(() => ({\n        setWidth() {\n          // unused but required by your view\n        },\n      }))\n\n    pluginManager.addViewType(() => {\n      return new ViewType({ name: 'HelloView', stateModel, ReactComponent })\n    })\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      // @ts-ignore\n      pluginManager.rootModel.appendToSubMenu(['File', 'Add'], {\n        label: 'Open Hello!',\n        // @ts-ignore\n        onClick: session => {\n          session.addView('HelloView', {})\n        },\n      })\n    }\n  }\n}\n"],"names":["ReactComponent","useState","pushed","setPushed","React","style","padding","onClick","MyProjectPlugin","version","pluginManager","jbrequire","types","lib","ViewType","stateModel","model","type","literal","actions","setWidth","addViewType","name","isAbstractMenuManager","rootModel","appendToSubMenu","label","session","addView","Plugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WAEwBA;oBACMC,cAAQ,CAAC,EAAD;;QAA7BC;QAAQC;;EACf,sBACEC,4BAAA,MAAA;EAAKC,IAAAA,KAAK,EAAE;EAAEC,MAAAA,OAAO,EAAE;EAAX;KAAZ,eACEF,4BAAA,KAAA,MAAA,4BAAA,CADF,eAEEA,4BAAA,SAAA;EACEG,IAAAA,OAAO,EAAE;EACPJ,MAAAA,SAAS,CAAC,8BAAD,CAAT;EACD;KAHH,mBAAA,CAFF,eASEC,4BAAA,IAAA,MAAA,EAAIF,MAAJ,CATF,CADF;EAaD;;MCXoBM;;;;;EAArB;;;;;;EACE,cAAA,GAAO,cAAP;EACA,iBAAA,GAAUC,OAAV;;EAgCD;;;;aA9BC,iBAAQC,aAAR;YACUC,YAAcD,cAAdC;YACAC,QAAUF,aAAa,CAACG,GAAd,CAAkB,iBAAlB,EAAVD;EAER,UAAME,QAAQ,GAAGH,SAAS,CAAC,8CAAD,CAA1B;EACA,UAAMI,UAAU,GAAGH,KAAK,CACrBI,KADgB,CACV;EAAEC,QAAAA,IAAI,EAAEL,KAAK,CAACM,OAAN,CAAc,WAAd;EAAR,OADU,EAEhBC,OAFgB,CAER;EAAA,eAAO;EACdC,UAAAA,QADc;EAGb;EAHa,SAAP;EAAA,OAFQ,CAAnB;EAQAV,MAAAA,aAAa,CAACW,WAAd,CAA0B;EACxB,eAAO,IAAIP,QAAJ,CAAa;EAAEQ,UAAAA,IAAI,EAAE,WAAR;EAAqBP,UAAAA,UAAU,EAAVA,UAArB;EAAiCf,UAAAA,cAAc,EAAdA;EAAjC,SAAb,CAAP;EACD,OAFD;EAGD;;;aAED,mBAAUU,aAAV;EACE,UAAIa,0BAAqB,CAACb,aAAa,CAACc,SAAf,CAAzB,EAAoD;EAClD;EACAd,QAAAA,aAAa,CAACc,SAAd,CAAwBC,eAAxB,CAAwC,CAAC,MAAD,EAAS,KAAT,CAAxC,EAAyD;EACvDC,UAAAA,KAAK,EAAE,aADgD;EAEvD;EACAnB,UAAAA,OAAO,EAAE,iBAAAoB,OAAO;EACdA,YAAAA,OAAO,CAACC,OAAR,CAAgB,WAAhB,EAA6B,EAA7B;EACD;EALsD,SAAzD;EAOD;EACF;;;;IAjC0CC;;;;;;;;;;;;"}