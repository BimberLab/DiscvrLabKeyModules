{"version":3,"file":"jbrowse-plugin-sandbox.esm.js","sources":["../src/HelloView/components/ReactComponent.tsx","../src/index.ts"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function ReactComponent() {\n  const [pushed, setPushed] = useState('')\n  return (\n    <div style={{ padding: 50 }}>\n      <h1>Hello plugin developers!</h1>\n      <button\n        onClick={() => {\n          setPushed('Woah! You pushed the button!')\n        }}\n      >\n        Push the button\n      </button>\n      <p>{pushed}</p>\n    </div>\n  )\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { isAbstractMenuManager } from '@jbrowse/core/util'\nimport { version } from '../package.json'\nimport { ReactComponent } from './HelloView'\n\nexport default class MyProjectPlugin extends Plugin {\n  name = 'MyProject'\n  version = version\n\n  install(pluginManager: PluginManager) {\n    const { jbrequire } = pluginManager\n    const { types } = pluginManager.lib['mobx-state-tree']\n\n    const ViewType = jbrequire('@jbrowse/core/pluggableElementTypes/ViewType')\n    const stateModel = types\n      .model({ type: types.literal('HelloView') })\n      .actions(() => ({\n        setWidth() {\n          // unused but required by your view\n        },\n      }))\n\n    pluginManager.addViewType(() => {\n      return new ViewType({ name: 'HelloView', stateModel, ReactComponent })\n    })\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      // @ts-ignore\n      pluginManager.rootModel.appendToSubMenu(['File', 'Add'], {\n        label: 'Open Hello!',\n        // @ts-ignore\n        onClick: session => {\n          session.addView('HelloView', {})\n        },\n      })\n    }\n  }\n}\n"],"names":["ReactComponent","useState","pushed","setPushed","React","style","padding","onClick","MyProjectPlugin","version","pluginManager","jbrequire","types","lib","ViewType","stateModel","model","type","literal","actions","setWidth","addViewType","name","isAbstractMenuManager","rootModel","appendToSubMenu","label","session","addView","Plugin"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAEwBA;kBACMC,QAAQ,CAAC,EAAD;;MAA7BC;MAAQC;;AACf,sBACEC,mBAAA,MAAA;AAAKC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;GAAZ,eACEF,mBAAA,KAAA,MAAA,4BAAA,CADF,eAEEA,mBAAA,SAAA;AACEG,IAAAA,OAAO,EAAE;AACPJ,MAAAA,SAAS,CAAC,8BAAD,CAAT;AACD;GAHH,mBAAA,CAFF,eASEC,mBAAA,IAAA,MAAA,EAAIF,MAAJ,CATF,CADF;AAaD;;ICXoBM;;;;;AAArB;;;;;;AACE,cAAA,GAAO,WAAP;AACA,iBAAA,GAAUC,OAAV;;AAgCD;;;;WA9BC,iBAAQC,aAAR;UACUC,YAAcD,cAAdC;UACAC,QAAUF,aAAa,CAACG,GAAd,CAAkB,iBAAlB,EAAVD;AAER,UAAME,QAAQ,GAAGH,SAAS,CAAC,8CAAD,CAA1B;AACA,UAAMI,UAAU,GAAGH,KAAK,CACrBI,KADgB,CACV;AAAEC,QAAAA,IAAI,EAAEL,KAAK,CAACM,OAAN,CAAc,WAAd;AAAR,OADU,EAEhBC,OAFgB,CAER;AAAA,eAAO;AACdC,UAAAA,QADc;AAGb;AAHa,SAAP;AAAA,OAFQ,CAAnB;AAQAV,MAAAA,aAAa,CAACW,WAAd,CAA0B;AACxB,eAAO,IAAIP,QAAJ,CAAa;AAAEQ,UAAAA,IAAI,EAAE,WAAR;AAAqBP,UAAAA,UAAU,EAAVA,UAArB;AAAiCf,UAAAA,cAAc,EAAdA;AAAjC,SAAb,CAAP;AACD,OAFD;AAGD;;;WAED,mBAAUU,aAAV;AACE,UAAIa,qBAAqB,CAACb,aAAa,CAACc,SAAf,CAAzB,EAAoD;AAClD;AACAd,QAAAA,aAAa,CAACc,SAAd,CAAwBC,eAAxB,CAAwC,CAAC,MAAD,EAAS,KAAT,CAAxC,EAAyD;AACvDC,UAAAA,KAAK,EAAE,aADgD;AAEvD;AACAnB,UAAAA,OAAO,EAAE,iBAAAoB,OAAO;AACdA,YAAAA,OAAO,CAACC,OAAR,CAAgB,WAAhB,EAA6B,EAA7B;AACD;AALsD,SAAzD;AAOD;AACF;;;;EAjC0CC;;;;"}