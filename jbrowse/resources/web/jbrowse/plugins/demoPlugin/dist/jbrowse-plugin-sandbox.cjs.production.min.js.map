{"version":3,"file":"jbrowse-plugin-sandbox.cjs.production.min.js","sources":["../src/HelloView/components/ReactComponent.tsx","../src/index.ts"],"sourcesContent":["import React, { useState } from 'react'\n\nexport default function ReactComponent() {\n  const [pushed, setPushed] = useState('')\n  return (\n    <div style={{ padding: 50 }}>\n      <h1>Hello plugin developers!</h1>\n      <button\n        onClick={() => {\n          setPushed('Woah! You pushed the button!')\n        }}\n      >\n        Push the button\n      </button>\n      <p>{pushed}</p>\n    </div>\n  )\n}\n","import Plugin from '@jbrowse/core/Plugin'\nimport PluginManager from '@jbrowse/core/PluginManager'\nimport { isAbstractMenuManager } from '@jbrowse/core/util'\nimport { version } from '../package.json'\nimport { ReactComponent } from './HelloView'\n\nexport default class MyProjectPlugin extends Plugin {\n  name = 'MyProject'\n  version = version\n\n  install(pluginManager: PluginManager) {\n    const { jbrequire } = pluginManager\n    const { types } = pluginManager.lib['mobx-state-tree']\n\n    const ViewType = jbrequire('@jbrowse/core/pluggableElementTypes/ViewType')\n    const stateModel = types\n      .model({ type: types.literal('HelloView') })\n      .actions(() => ({\n        setWidth() {\n          // unused but required by your view\n        },\n      }))\n\n    pluginManager.addViewType(() => {\n      return new ViewType({ name: 'HelloView', stateModel, ReactComponent })\n    })\n  }\n\n  configure(pluginManager: PluginManager) {\n    if (isAbstractMenuManager(pluginManager.rootModel)) {\n      // @ts-ignore\n      pluginManager.rootModel.appendToSubMenu(['File', 'Add'], {\n        label: 'Open Hello!',\n        // @ts-ignore\n        onClick: session => {\n          session.addView('HelloView', {})\n        },\n      })\n    }\n  }\n}\n"],"names":["ReactComponent","useState","pushed","setPushed","React","style","padding","onClick","Plugin","pluginManager","types","lib","ViewType","jbrequire","stateModel","model","type","literal","actions","setWidth","addViewType","name","isAbstractMenuManager","rootModel","appendToSubMenu","label","session","addView"],"mappings":"owCAEwBA,wDACMC,WAAS,iwBAA9BC,OAAQC,cAEbC,uBAAKC,MAAO,CAAEC,QAAS,KACrBF,sDACAA,0BACEG,QAAS,WACPJ,EAAU,qDAKdC,yBAAIF,sQCRmCM,qFACpC,+DAGP,SAAQC,OAEEC,EAAUD,EAAcE,IAAI,mBAA5BD,MAEFE,GAAWC,EAHKJ,EAAdI,WAGmB,gDACrBC,EAAaJ,EAChBK,MAAM,CAAEC,KAAMN,EAAMO,QAAQ,eAC5BC,SAAQ,iBAAO,CACdC,0BAKJV,EAAcW,aAAY,kBACjB,IAAIR,EAAS,CAAES,KAAM,YAAaP,WAAAA,EAAYd,eAAAA,gCAIzD,SAAUS,GACJa,wBAAsBb,EAAcc,YAEtCd,EAAcc,UAAUC,gBAAgB,CAAC,OAAQ,OAAQ,CACvDC,MAAO,cAEPlB,QAAS,SAAAmB,GACPA,EAAQC,QAAQ,YAAa"}