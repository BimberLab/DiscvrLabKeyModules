import org.labkey.gradle.util.GroupNames

task('metadataStudyArchive', type: Zip, group: "Data", description: "Assemble study archive with dataset metadata") {
    archiveName 'snprc_r24_metadata.zip'
    destinationDir = project.file("${project.labkey.explodedModuleDir}/archives")
    from("resources/referenceStudy/") {
        include "study.xml"
        include "datasets/*"
        exclude "datasets/*.tsv"
    }
}
project.tasks.module.dependsOn(project.tasks.metadataStudyArchive)

task('datasetStudyArchive', type: Zip, group: "Data", description: "Assemble study archive with dataset data") {
    archiveName 'snprc_r24.zip'
    destinationDir = project.file("${project.labkey.explodedModuleDir}/archives")
    from("resources/referenceStudy/") {
        include "study.xml"
        include "datasets/*"
    }
}

project.tasks.module.dependsOn(project.tasks.datasetStudyArchive)

sourceSets {
    transform {
        java {
            srcDirs = ['resources/transform/src']
        }
    }
}

dependencies {
    transformCompile "org.apache.poi:poi:${poiVersion}"
    transformCompile "org.apache.poi:poi-ooxml:${poiVersion}"
    transformCompile "org.apache.poi:poi-ooxml-schemas:${poiVersion}"
    transformCompile "org.apache.pdfbox:pdfbox:${pdfboxVersion}"
    transformCompile "com.google.guava:guava:${guavaVersion}"
    transformCompile "org.apache.commons:commons-collections4:${commonsCollections4Version}"
}

project.task("transformJar",
        group: GroupNames.BUILD,
        type: Jar,
        description: "Create the transform jar file",
        {Jar jar ->
            jar.from project.sourceSets.transform.output
            jar.from { configurations.transformCompile.collect { it.isDirectory() ? it : zipTree(it) }}
            jar.baseName = "MicrobiomeTransform"
            jar.classifier = "transform"
            jar.destinationDir = new File(project.buildDir, "artifacts/snprc")
            jar.manifest {
                attributes "Main-Class": "MicrobiomeTransform"
            }
        }
)

project.artifacts {
    archives project.tasks.transformJar
}

project.tasks.module.dependsOn(project.tasks.transformJar)

