<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="Standalone Build" default="build_module" basedir=".">

    <!-- -->
    <property name="module.name" value="GeneticsCore" />

    <property environment="env"/>
    <target name="init">
        <fail unless="module.name"
              message="module.name must be set in build.xml"/>
        <condition property="module.name.isempty" value="true">
            <equals arg1="${module.name}" arg2="" />
        </condition>
        <fail if="module.name.isempty" message="module.name must be set in build.xml" />

        <property name="labkey.root" value="../../../" />
        <property name="build.dir" value="${labkey.root}${file.separator}..${file.separator}build" />
        <property name="main.build.xml" value="${labkey.root}/server/build.xml" />
        <property name="jsdoc.root" value="${labkey.root}/tools/jsdoc-toolkit" />
    </target>

    <target name="build" depends="build_module" />
    <target name="build_module"
            depends="init"
            description="Builds local module only.  Deploys local module into LabKey installation.">
        <ant antfile="${main.build.xml}"
             target="sub_build_module"
             inheritall="false">
            <property name="moduleDir" value="${basedir}"/>
            <property name="moduleName" value="${module.name}"/>
        </ant>
    </target>

    <target name="jsdoc" depends="init" unless="devMode">
        <uptodate targetfile="${build.dir}/modules/${module.name}/web/docs/files.html" property="jsdoc_uptodate" >
            <srcfiles dir="${module.name}${file.separator}web${file.separator}clientapi" />
        </uptodate>
        <antcall target="jsdoc_if_dirty" />
    </target>

    <target name="jsdoc_if_dirty" unless="jsdoc_uptodate">
        <property name="jsdoc.root" value="${labkey.root}/tools/jsdoc-toolkit" />
        <echo message="Generating JSDoc to ${build.dir}${file.separator}jsdoc${file.separator}" />
        <!--Write version to jsdoc templates-->
        <delete dir="${jsdoc.root}/templates/jsdoc/substituted"/>
        <copy todir="${jsdoc.root}/templates/jsdoc/substituted" overwrite="true">
            <fileset file="${jsdoc.root}/templates/jsdoc/**"/>
            <filterset begintoken="@@" endtoken="@@">
                <filter token="product.version" value="${product.version}"/>
            </filterset>
        </copy>
        <java fork="true" jar="${jsdoc.root}/jsrun.jar">
            <arg value="${jsdoc.root}${file.separator}app${file.separator}run.js" />
            <arg value="api${file.separator}webapp${file.separator}${module.name}/web" />
            <arg value="--template=${jsdoc.root}${file.separator}templates${file.separator}jsdoc${file.separator}substituted" />
            <arg value="--directory=${build.dir}${file.separator}client-api${file.separator}javascript${file.separator}docs" />
            <arg value="--verbose" />
        </java>
        <delete dir="${jsdoc.root}/templates/jsdoc/substituted"/>
    </target>

</project>
